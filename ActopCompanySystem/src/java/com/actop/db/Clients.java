package com.actop.db;
// Generated Jul 23, 2015 9:46:44 AM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.ColumnTransformer;

/**
 * Clients generated by hbm2java
 */
@Entity
@Table(name = "clients", catalog = "actop_system"
)
public class Clients implements java.io.Serializable {

    private Integer idClients;
    private byte[] name;
    private byte[] address;
    private byte[] email;
    private byte[] contactNo;
    private byte[] cantactPersonDepartment;
    private byte[] contactPersonDesignation;
    private byte[] contactPerson;
    private byte[] contactPersonNo;
    private byte[] contactPersonEmail;
    private Set<Projects> projectses = new HashSet<Projects>(0);

    public Clients() {
    }

    public Clients(byte[] name, byte[] address, byte[] email, byte[] contactNo, byte[] cantactPersonDepartment, byte[] contactPersonDesignation, byte[] contactPerson, byte[] contactPersonNo, byte[] contactPersonEmail, Set<Projects> projectses) {
        this.name = name;
        this.address = address;
        this.email = email;
        this.contactNo = contactNo;
        this.cantactPersonDepartment = cantactPersonDepartment;
        this.contactPersonDesignation = contactPersonDesignation;
        this.contactPerson = contactPerson;
        this.contactPersonNo = contactPersonNo;
        this.contactPersonEmail = contactPersonEmail;
        this.projectses = projectses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "ID_CLIENTS", unique = true, nullable = false)
    public Integer getIdClients() {
        return this.idClients;
    }

    public void setIdClients(Integer idClients) {
        this.idClients = idClients;
    }

    @Column(name = "NAME")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getName() {
        return this.name;
    }

    public void setName(byte[] name) {
        this.name = name;
    }

    @Column(name = "ADDRESS")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getAddress() {
        return this.address;
    }

    public void setAddress(byte[] address) {
        this.address = address;
    }

    @Column(name = "EMAIL")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getEmail() {
        return this.email;
    }

    public void setEmail(byte[] email) {
        this.email = email;
    }

    @Column(name = "CONTACT_NO")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getContactNo() {
        return this.contactNo;
    }

    public void setContactNo(byte[] contactNo) {
        this.contactNo = contactNo;
    }

    @Column(name = "CANTACT_PERSON_DEPARTMENT")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getCantactPersonDepartment() {
        return this.cantactPersonDepartment;
    }

    public void setCantactPersonDepartment(byte[] cantactPersonDepartment) {
        this.cantactPersonDepartment = cantactPersonDepartment;
    }

    @Column(name = "CONTACT_PERSON_DESIGNATION")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getContactPersonDesignation() {
        return this.contactPersonDesignation;
    }

    public void setContactPersonDesignation(byte[] contactPersonDesignation) {
        this.contactPersonDesignation = contactPersonDesignation;
    }

    @Column(name = "CONTACT_PERSON")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getContactPerson() {
        return this.contactPerson;
    }

    public void setContactPerson(byte[] contactPerson) {
        this.contactPerson = contactPerson;
    }

    @Column(name = "CONTACT_PERSON_NO")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getContactPersonNo() {
        return this.contactPersonNo;
    }

    public void setContactPersonNo(byte[] contactPersonNo) {
        this.contactPersonNo = contactPersonNo;
    }

    @Column(name = "CONTACT_PERSON_EMAIL")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getContactPersonEmail() {
        return this.contactPersonEmail;
    }

    public void setContactPersonEmail(byte[] contactPersonEmail) {
        this.contactPersonEmail = contactPersonEmail;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "clients")
    public Set<Projects> getProjectses() {
        return this.projectses;
    }

    public void setProjectses(Set<Projects> projectses) {
        this.projectses = projectses;
    }

}
