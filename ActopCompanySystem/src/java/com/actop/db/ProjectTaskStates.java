package com.actop.db;
// Generated Jul 23, 2015 9:46:44 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.ColumnTransformer;

/**
 * ProjectTaskStates generated by hbm2java
 */
@Entity
@Table(name = "project_task_states", catalog = "actop_system"
)
public class ProjectTaskStates implements java.io.Serializable {

    private Integer idProjectTaskStates;
    private ProjectTasks projectTasks;
    private byte[] topic;
    private Date topicStart;
    private Date topicEnd;
    private byte[] topicEstimateTime;
    private byte[] topicActualTime;
    private String topicNote;
    private byte[] topicStates;
    private Set<TaskDetails> taskDetailses = new HashSet<TaskDetails>(0);

    public ProjectTaskStates() {
    }

    public ProjectTaskStates(ProjectTasks projectTasks) {
        this.projectTasks = projectTasks;
    }

    public ProjectTaskStates(ProjectTasks projectTasks, byte[] topic, Date topicStart, Date topicEnd, byte[] topicEstimateTime, byte[] topicActualTime, String topicNote, byte[] topicStates, Set<TaskDetails> taskDetailses) {
        this.projectTasks = projectTasks;
        this.topic = topic;
        this.topicStart = topicStart;
        this.topicEnd = topicEnd;
        this.topicEstimateTime = topicEstimateTime;
        this.topicActualTime = topicActualTime;
        this.topicNote = topicNote;
        this.topicStates = topicStates;
        this.taskDetailses = taskDetailses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "ID_PROJECT_TASK_STATES", unique = true, nullable = false)
    public Integer getIdProjectTaskStates() {
        return this.idProjectTaskStates;
    }

    public void setIdProjectTaskStates(Integer idProjectTaskStates) {
        this.idProjectTaskStates = idProjectTaskStates;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PROJECT_TASKS_ID_PROJECT_TASKS", nullable = false)
    public ProjectTasks getProjectTasks() {
        return this.projectTasks;
    }

    public void setProjectTasks(ProjectTasks projectTasks) {
        this.projectTasks = projectTasks;
    }

    @Column(name = "TOPIC")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getTopic() {
        return this.topic;
    }

    public void setTopic(byte[] topic) {
        this.topic = topic;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "TOPIC_START", length = 19)
    public Date getTopicStart() {
        return this.topicStart;
    }

    public void setTopicStart(Date topicStart) {
        this.topicStart = topicStart;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "TOPIC_END", length = 19)
    public Date getTopicEnd() {
        return this.topicEnd;
    }

    public void setTopicEnd(Date topicEnd) {
        this.topicEnd = topicEnd;
    }

    @Column(name = "TOPIC_ESTIMATE_TIME")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getTopicEstimateTime() {
        return this.topicEstimateTime;
    }

    public void setTopicEstimateTime(byte[] topicEstimateTime) {
        this.topicEstimateTime = topicEstimateTime;
    }

    @Column(name = "TOPIC_ACTUAL_TIME")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getTopicActualTime() {
        return this.topicActualTime;
    }

    public void setTopicActualTime(byte[] topicActualTime) {
        this.topicActualTime = topicActualTime;
    }

    @Column(name = "TOPIC_NOTE")
    public String getTopicNote() {
        return this.topicNote;
    }

    public void setTopicNote(String topicNote) {
        this.topicNote = topicNote;
    }

    @Column(name = "TOPIC_STATES")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getTopicStates() {
        return this.topicStates;
    }

    public void setTopicStates(byte[] topicStates) {
        this.topicStates = topicStates;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "projectTaskStates")
    public Set<TaskDetails> getTaskDetailses() {
        return this.taskDetailses;
    }

    public void setTaskDetailses(Set<TaskDetails> taskDetailses) {
        this.taskDetailses = taskDetailses;
    }

}
