package com.actop.db;
// Generated Jul 11, 2015 12:30:16 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ProjectTasks generated by hbm2java
 */
@Entity
@Table(name="project_tasks"
    ,catalog="actop_system"
)
public class ProjectTasks  implements java.io.Serializable {


     private Integer idProjectTasks;
     private Employers employers;
     private Projects projects;
     private byte[] projectTaskType;
     private String projectTaskNote;
     private Date projectTaskStart;
     private Date projectTaskEnd;
     private Date projectTaskAssing;
     private byte[] projectTaskAssingBy;
     private byte[] projectTaskStates;
     private Integer projectTaskPriority;
     private Set<ProjectTaskStates> projectTaskStateses = new HashSet<ProjectTaskStates>(0);

    public ProjectTasks() {
    }

	
    public ProjectTasks(Employers employers, Projects projects) {
        this.employers = employers;
        this.projects = projects;
    }
    public ProjectTasks(Employers employers, Projects projects, byte[] projectTaskType, String projectTaskNote, Date projectTaskStart, Date projectTaskEnd, Date projectTaskAssing, byte[] projectTaskAssingBy, byte[] projectTaskStates, Integer projectTaskPriority, Set<ProjectTaskStates> projectTaskStateses) {
       this.employers = employers;
       this.projects = projects;
       this.projectTaskType = projectTaskType;
       this.projectTaskNote = projectTaskNote;
       this.projectTaskStart = projectTaskStart;
       this.projectTaskEnd = projectTaskEnd;
       this.projectTaskAssing = projectTaskAssing;
       this.projectTaskAssingBy = projectTaskAssingBy;
       this.projectTaskStates = projectTaskStates;
       this.projectTaskPriority = projectTaskPriority;
       this.projectTaskStateses = projectTaskStateses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID_PROJECT_TASKS", unique=true, nullable=false)
    public Integer getIdProjectTasks() {
        return this.idProjectTasks;
    }
    
    public void setIdProjectTasks(Integer idProjectTasks) {
        this.idProjectTasks = idProjectTasks;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMPLOYERS_ID_EMPLOYERS", nullable=false)
    public Employers getEmployers() {
        return this.employers;
    }
    
    public void setEmployers(Employers employers) {
        this.employers = employers;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PROJECTS_ID_PROJECTS", nullable=false)
    public Projects getProjects() {
        return this.projects;
    }
    
    public void setProjects(Projects projects) {
        this.projects = projects;
    }

    
    @Column(name="PROJECT_TASK_TYPE")
    public byte[] getProjectTaskType() {
        return this.projectTaskType;
    }
    
    public void setProjectTaskType(byte[] projectTaskType) {
        this.projectTaskType = projectTaskType;
    }

    
    @Column(name="PROJECT_TASK_NOTE")
    public String getProjectTaskNote() {
        return this.projectTaskNote;
    }
    
    public void setProjectTaskNote(String projectTaskNote) {
        this.projectTaskNote = projectTaskNote;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="PROJECT_TASK_START", length=19)
    public Date getProjectTaskStart() {
        return this.projectTaskStart;
    }
    
    public void setProjectTaskStart(Date projectTaskStart) {
        this.projectTaskStart = projectTaskStart;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="PROJECT_TASK_END", length=19)
    public Date getProjectTaskEnd() {
        return this.projectTaskEnd;
    }
    
    public void setProjectTaskEnd(Date projectTaskEnd) {
        this.projectTaskEnd = projectTaskEnd;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="PROJECT_TASK_ASSING", length=19)
    public Date getProjectTaskAssing() {
        return this.projectTaskAssing;
    }
    
    public void setProjectTaskAssing(Date projectTaskAssing) {
        this.projectTaskAssing = projectTaskAssing;
    }

    
    @Column(name="PROJECT_TASK_ASSING_BY")
    public byte[] getProjectTaskAssingBy() {
        return this.projectTaskAssingBy;
    }
    
    public void setProjectTaskAssingBy(byte[] projectTaskAssingBy) {
        this.projectTaskAssingBy = projectTaskAssingBy;
    }

    
    @Column(name="PROJECT_TASK_STATES")
    public byte[] getProjectTaskStates() {
        return this.projectTaskStates;
    }
    
    public void setProjectTaskStates(byte[] projectTaskStates) {
        this.projectTaskStates = projectTaskStates;
    }

    
    @Column(name="PROJECT_TASK_PRIORITY")
    public Integer getProjectTaskPriority() {
        return this.projectTaskPriority;
    }
    
    public void setProjectTaskPriority(Integer projectTaskPriority) {
        this.projectTaskPriority = projectTaskPriority;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="projectTasks")
    public Set<ProjectTaskStates> getProjectTaskStateses() {
        return this.projectTaskStateses;
    }
    
    public void setProjectTaskStateses(Set<ProjectTaskStates> projectTaskStateses) {
        this.projectTaskStateses = projectTaskStateses;
    }




}


