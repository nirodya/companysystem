package com.actop.db;
// Generated Jul 23, 2015 9:46:44 AM by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.ColumnTransformer;

/**
 * TaskDetails generated by hbm2java
 */
@Entity
@Table(name = "task_details", catalog = "actop_system"
)
public class TaskDetails implements java.io.Serializable {

    private Integer idTaskDetails;
    private ProjectTaskStates projectTaskStates;
    private byte[] taskDetailsTopic;
    private byte[] taskDetailsNote;
    private Date taskDetailsDate;
    private Date taskDetailsStart;
    private Date taskDetailsEnd;
    private byte[] taskDetailsCalculateTime;
    private byte[] taskDetailsActualTime;

    public TaskDetails() {
    }

    public TaskDetails(ProjectTaskStates projectTaskStates) {
        this.projectTaskStates = projectTaskStates;
    }

    public TaskDetails(ProjectTaskStates projectTaskStates, byte[] taskDetailsTopic, byte[] taskDetailsNote, Date taskDetailsDate, Date taskDetailsStart, Date taskDetailsEnd, byte[] taskDetailsCalculateTime, byte[] taskDetailsActualTime) {
        this.projectTaskStates = projectTaskStates;
        this.taskDetailsTopic = taskDetailsTopic;
        this.taskDetailsNote = taskDetailsNote;
        this.taskDetailsDate = taskDetailsDate;
        this.taskDetailsStart = taskDetailsStart;
        this.taskDetailsEnd = taskDetailsEnd;
        this.taskDetailsCalculateTime = taskDetailsCalculateTime;
        this.taskDetailsActualTime = taskDetailsActualTime;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "ID_TASK_DETAILS", unique = true, nullable = false)
    public Integer getIdTaskDetails() {
        return this.idTaskDetails;
    }

    public void setIdTaskDetails(Integer idTaskDetails) {
        this.idTaskDetails = idTaskDetails;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PROJECT_TASK_STATES_ID_PROJECT_TASK_STATES", nullable = false)
    public ProjectTaskStates getProjectTaskStates() {
        return this.projectTaskStates;
    }

    public void setProjectTaskStates(ProjectTaskStates projectTaskStates) {
        this.projectTaskStates = projectTaskStates;
    }

    @Column(name = "TASK_DETAILS_TOPIC")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getTaskDetailsTopic() {
        return this.taskDetailsTopic;
    }

    public void setTaskDetailsTopic(byte[] taskDetailsTopic) {
        this.taskDetailsTopic = taskDetailsTopic;
    }

    @Column(name = "TASK_DETAILS_NOTE")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getTaskDetailsNote() {
        return this.taskDetailsNote;
    }

    public void setTaskDetailsNote(byte[] taskDetailsNote) {
        this.taskDetailsNote = taskDetailsNote;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "TASK_DETAILS_DATE", length = 10)
    public Date getTaskDetailsDate() {
        return this.taskDetailsDate;
    }

    public void setTaskDetailsDate(Date taskDetailsDate) {
        this.taskDetailsDate = taskDetailsDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "TASK_DETAILS_START", length = 10)
    public Date getTaskDetailsStart() {
        return this.taskDetailsStart;
    }

    public void setTaskDetailsStart(Date taskDetailsStart) {
        this.taskDetailsStart = taskDetailsStart;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "TASK_DETAILS_END", length = 10)
    public Date getTaskDetailsEnd() {
        return this.taskDetailsEnd;
    }

    public void setTaskDetailsEnd(Date taskDetailsEnd) {
        this.taskDetailsEnd = taskDetailsEnd;
    }

    @Column(name = "TASK_DETAILS_CALCULATE_TIME")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getTaskDetailsCalculateTime() {
        return this.taskDetailsCalculateTime;
    }

    public void setTaskDetailsCalculateTime(byte[] taskDetailsCalculateTime) {
        this.taskDetailsCalculateTime = taskDetailsCalculateTime;
    }

    @Column(name = "TASK_DETAILS_ACTUAL_TIME")
    @ColumnTransformer(
            read = "AES_DECRYPT(encryptedBody, 'Actop@123456')",
            write = "AES_ENCRYPT(?, 'Actop@123456')")
    public byte[] getTaskDetailsActualTime() {
        return this.taskDetailsActualTime;
    }

    public void setTaskDetailsActualTime(byte[] taskDetailsActualTime) {
        this.taskDetailsActualTime = taskDetailsActualTime;
    }

}
